{"version":3,"sources":["actions/promoCodeActions.js","actions/types.js","components/subtotal/subtotal.js","components/PickupSavings/PickupSavings.js","components/TaxesFees/TaxesFees.js","components/EstimatdeTotal/EstimatedTotal.js","components/ItemDetails/ItemDetails.js","components/PromoCode/PromoCode.js","App.js","serviceWorker.js","reducers/promoCodeReducer.js","reducers/index.js","store.js","index.js"],"names":["handleChange","e","dispatch","type","payload","target","value","Subtotal","Row","className","Col","md","this","props","price","Component","styles","pickupSavings","textDecoration","totalSavings","color","fontWeight","PickupSavings","tooltip","Tooltip","id","OverlayTrigger","placement","overlay","style","TaxesFees","taxes","EstimatedTotal","ItemDetails","state","open","Button","bsStyle","aria-controls","onClick","setState","Collapse","in","backgroundColor","margin","width","height","alt","src","textAlign","fontSize","PromoCodeDiscount","Form","FormGroup","controlId","FormLabel","FormControl","placeholder","promoCode","onChange","block","disabled","isDisabled","giveDiscount","connect","App","context","componentDidMount","total","estimatedTotal","giveDiscountHandler","disablePromoButton","toFixed","PromoCode","Boolean","window","location","hostname","match","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","devToolsExtension","f","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.39e181fb.chunk.js","sourcesContent":["import {PROMO_CODE} from './types';\r\n\r\nexport const handleChange = e => dispatch => {\r\n    dispatch({\r\n        type: PROMO_CODE,\r\n        payload: e.target.value\r\n    });\r\n};","export const PROMO_CODE = \"PROMO_CODE\";","import React,{ Component } from 'react';\r\nimport {Row, Col } from 'react-bootstrap';\r\n\r\nexport default class Subtotal extends Component {\r\n    render(){\r\n        return(\r\n            <Row className=\"show-grid\">\r\n                <Col md={6}>Subtotal</Col>\r\n                <Col md={6}>{`$${this.props.price}`}</Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Row, Col, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\n\r\nvar styles = {\r\n    pickupSavings: {\r\n        textDecoration: 'underline'\r\n    },\r\n    totalSavings: {\r\n        color: 'red',\r\n        fontWeight: 800\r\n    }\r\n}\r\n\r\nexport default class PickupSavings extends Component {\r\n    render() {\r\n        const tooltip = (<Tooltip id=\"tooltip\">\r\n            <p>Picking up your order in the store helps cut costs, and we pass the savings on to you.</p>\r\n        </Tooltip>)\r\n\r\n\r\n        return (\r\n            <Row className=\"show-grid\">\r\n                <Col md={6}>\r\n                    <OverlayTrigger placement=\"bottom\" overlay={tooltip}>\r\n                        <div style={styles.pickupSavings}>Pickup Savings</div>\r\n                    </OverlayTrigger>\r\n                </Col>\r\n                <Col style={styles.totalSavings} md={6}> {`$${this.props.price}`} </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Col, Row} from 'react-bootstrap';\r\n\r\nexport default class TaxesFees extends Component{\r\n    render(){\r\n        return(\r\n            <Row className=\"show-grid\">\r\n               <Col md={6}>Est. taxes & fees (Based on 130792)</Col>\r\n               <Col md={6}>{`$${this.props.taxes}`}</Col>         \r\n            </Row>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport {Col, Row} from 'react-bootstrap';\r\n\r\nexport default class EstimatedTotal extends Component{\r\n    render(){\r\n        return(\r\n            <Row>\r\n                <Col md={6}><h2>Est. Total</h2></Col>\r\n                <Col md={6}><h2>{`$${this.props.price}`}</h2></Col>\r\n            </Row>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Collapse, Well, Media, Row, Col } from 'react-bootstrap';\r\n\r\nexport default class ItemDetails extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    className=\"item-details-button btn-warning\"\r\n                    bsStyle=\"link\"\r\n                    aria-controls=\"example-collapse-text\"\r\n                    onClick={() => this.setState({ open: !this.state.open })}\r\n                >\r\n                    {this.state.open === false ? ` See ` : ` Hide `} item details\r\n                {this.state.open === false ? ` + ` : ` - `}\r\n                </Button>\r\n                <Collapse in={this.state.open}>\r\n                    <Row id=\"example-collapse-text\" style={{backgroundColor: '#8080801c'}}>\r\n                        <Col md={4} style={{margin: \"auto\"}}>\r\n                            <img\r\n                                width={100}\r\n                                height={100}\r\n                                alt=\"thumbnail\"\r\n                                src=\"./images/walmart.jpeg\"\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <p style={{textAlign: 'justify', fontSize: 14}}>\r\n                                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\r\n                                terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\r\n                                labore wes anderson cred nesciunt sapiente ea proident.\r\n                            </p>\r\n                        </Col>\r\n                    </Row>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Button, Collapse, Form, Row, Col, FormGroup, FormLabel, FormControl } from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\nimport {handleChange} from '../../actions/promoCodeActions';\r\n\r\nclass PromoCodeDiscount extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            open: false\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.props.handleChange(e);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button\r\n                    className=\"promo-code-button btn-secondary\"\r\n                    bsStyle=\"link\"\r\n                    onClick={() => this.setState({ open: !this.state.open })}\r\n                >\r\n                    {this.state.open === false ? `Apply ` : `Hide `}\r\n                    promo code\r\n                    {this.state.open === false ? ` +` : ` -`}\r\n                </Button>\r\n                <Collapse in={this.state.open}>\r\n                    <Row className=\"show-grid\">\r\n                        <Col md={12}>\r\n                            <Form>\r\n                                <FormGroup controlId=\"formInLineNumber\">\r\n                                    <FormLabel>Promo Code</FormLabel>\r\n                                    <FormControl\r\n                                        type=\"text\"\r\n                                        placeholder=\"Enter your promo code\"\r\n                                        value={this.props.promoCode}\r\n                                        onChange={this.handleChange}\r\n                                    />\r\n                                </FormGroup>\r\n                                <Button\r\n                                    block\r\n                                    bsStyle=\"success\"\r\n                                    className=\"btn-round\"\r\n                                    disabled={this.props.isDisabled}\r\n                                    onClick={this.props.giveDiscount}\r\n                                >\r\n                                    Apply\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Collapse>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    promoCode: state.promoCode.value\r\n});\r\n\r\nexport default connect(mapStateToProps, {handleChange}) (PromoCodeDiscount);","import React, { Component } from 'react';\r\nimport { Row } from 'react-bootstrap';\r\nimport './App.css';\r\nimport { connect } from 'react-redux';\r\nimport {handleChange} from './actions/promoCodeActions';\r\n//component \r\nimport Subtotal from './components/subtotal/subtotal';\r\nimport PickupSavings from './components/PickupSavings/PickupSavings';\r\nimport TaxesFees from './components/TaxesFees/TaxesFees';\r\nimport EstimatedTotal from './components/EstimatdeTotal/EstimatedTotal';\r\nimport ItemDetails from './components/ItemDetails/ItemDetails';\r\nimport PromoCodeDiscount from './components/PromoCode/PromoCode';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props, context) {\r\n    super(props, context);\r\n    this.state = {\r\n      total: 200,\r\n      PickupSavings: -3.85,\r\n      taxes: 0,\r\n      estimatedTotal: 0,\r\n      disablePromoButton: false\r\n    }\r\n  }\r\n  \r\n  componentDidMount = () => {\r\n    this.setState({\r\n      taxes: (this.state.total + this.state.PickupSavings) * 0.0875\r\n    }, () => {\r\n      this.setState({\r\n        estimatedTotal: this.state.total + this.state.PickupSavings + this.state.taxes\r\n      })\r\n    })\r\n  }\r\n\r\n  giveDiscountHandler = () => {\r\n    if(this.props.promoCode === 'DISCOUNT'){\r\n      this.setState({\r\n        estimatedTotal: this.state.estimatedTotal * 0.9\r\n      }, () =>{\r\n        this.setState({\r\n          disablePromoButton: true\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"purchase-card\">\r\n          <Subtotal price={this.state.total.toFixed(2)} />\r\n          <PickupSavings price={this.state.PickupSavings} />\r\n          <TaxesFees taxes={this.state.taxes.toFixed(2)} />\r\n          <hr />\r\n          <EstimatedTotal price={this.state.estimatedTotal.toFixed(2)} />\r\n          <ItemDetails price={this.state.estimatedTotal.toFixed(2)}/>\r\n          <hr />\r\n          <PromoCodeDiscount \r\n            giveDiscount={() => this.giveDiscountHandler()}\r\n            isDisabled={this.state.disablePromoButton}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  promoCode: state.promoCode.value\r\n})\r\n\r\nexport default connect(mapStateToProps, {handleChange}) (App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { PROMO_CODE } from '../actions/types';\r\nimport { type } from 'os';\r\n\r\nconst initialState = {\r\n    open: false,\r\n    value: ''\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n    switch (action.type) {\r\n        case PROMO_CODE:\r\n            return {\r\n                ...state,\r\n                value: action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport promoCodeReducer from './promoCodeReducer';\r\n\r\nexport default combineReducers({\r\n    promoCode: promoCodeReducer\r\n});","//Import createStore and applyMiddleware\r\nimport {createStore, applyMiddleware, compose} from 'redux'\r\n//Import Thunk\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.devToolsExtension ? window.devToolsExtension() : f => f\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {Provider} from 'react-redux';\r\nimport store from './store';\r\n\r\n\r\nReactDOM.render(\r\n<Provider store={store}>\r\n    <App />\r\n</Provider>, \r\ndocument.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}